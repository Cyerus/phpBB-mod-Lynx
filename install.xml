<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<?xml-stylesheet type="text/xsl" href="modx.prosilver.en.xsl"?>
<!--For security purposes, please check: http://www.phpbb.com/mods/ for the latest version of this MOD. Although MODs are checked before being allowed in the MODs Database there is no guarantee that there are no security problems within the MOD. No support will be given for MODs not found within the MODs Database which can be found at http://www.phpbb.com/mods/-->
<mod xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="https://www.phpbb.com/mods/xml/modx-1.2.6.xsd">
	<header>
		<license>http://opensource.org/licenses/MIT The MIT License (MIT)</license>

		<title lang="en">Lynx for phpBB mod, v1.0.0</title>

		<description lang="en">This file contains the instructions for the installation of the Lynx for phpBB mod</description>

		<author-notes lang="en"></author-notes>

		<author-group>
			<author>
				<realname>Jordy Wille</realname>
				<username phpbbcom="no">Cyerus</username>
				<homepage>http://eve-it.org/my-phpbb-mods/lynx/</homepage>
      		<contributions-group>
      		  <contributions status="current" from="2010-07-10" position="Developer"/>
      		</contributions-group>
			</author>
		</author-group>

		<mod-version>1.0.0</mod-version>

		<installation>
			<level>easy</level>
			<time>60</time>
			<target-version>3.0.12</target-version>
		</installation>

		<history>
			<entry>
				<date>2014-02-28</date>
				<rev-version>1.0.0</rev-version>
				<changelog lang="en">
					<change>Initial commit, split from original package for easy maintainance and a more focussed approach.</change>
				</changelog>
			</entry>
		</history>

		<link-group>
			<link type="template" lang="en" href="contrib/subsilver2.xml">Edits meant for subsilver2 style</link>
		</link-group>
	</header>

	<action-group>
		<copy>
			<file from="root/adm/style/*.*" to="adm/style/*.*" />
			<file from="root/includes/*.*" to="includes/*.*" />
			<file from="root/install/*.*" to="install/*.*" />
			<file from="root/language/*.*" to="language/*.*" />
			<file from="root/styles/prosilver/*.*" to="styles/prosilver/*.*" />
		</copy>

		<open src="adm/style/acp_groups.html">
			<edit>
				<find><![CDATA[	<dl>
		<dt><label for="group_rank">{L_GROUP_RANK}:</label></dt>
		<dd><select name="group_rank" id="group_rank">{S_RANK_OPTIONS}</select></dd>
	</dl>
	</fieldset>]]></find>
				<action type="after-add"><![CDATA[
        <fieldset>
		<legend>{L_ACP_LYNX_GROUPCAT}</legend>
	<dl>
		<dt><label for="group_lynx_ts3">{L_ACP_LYNX_TEAMSPEAK3}:</label><br /><span>{L_ACP_LYNX_TEAMSPEAK3_EXPLAIN}</span></dt>
		<dd><input name="group_lynx_ts3" type="text" id="group_lynx_ts3" maxlength="4" size="4" value="{GROUP_LYNX_TS3}" /></dd>
	</dl>
	<dl>
		<dt><label for="group_lynx_ejabberd">{L_ACP_LYNX_EJABBERD}:</label><br /><span>{L_ACP_LYNX_EJABBERD_EXPLAIN}</span></dt>
		<dd><input name="group_lynx_ejabberd" type="checkbox" value="1" class="radio" id="group_lynx_ejabberd"{GROUP_LYNX_EJABBERD} /></dd>
	</dl>
	<dl>
		<dt><label for="group_lynx_openfire">{L_ACP_LYNX_OPENFIRE}:</label><br /><span>{L_ACP_LYNX_OPENFIRE_EXPLAIN}</span></dt>
		<dd><input name="group_lynx_openfire" type="text" id="group_lynx_openfire" maxlength="20" size="20" value="{GROUP_LYNX_OPENFIRE}" /></dd>
	</dl>
	</fieldset>]]></action>
			</edit>
		</open>
		<open src="adm/style/acp_users_overview.html">
			<edit>
				<find><![CDATA[<p class="quick">
	<input class="button1" type="submit" name="update" value="{L_SUBMIT}" />
	<input type="hidden" name="action" value="" />
	{S_FORM_TOKEN}
</p>

</fieldset>
</form>]]></find>
				<action type="replace-with"><![CDATA[<p class="quick">
	<input class="button1" type="submit" name="update" value="{L_SUBMIT}" />
	<input type="hidden" name="action" value="" />
	{S_FORM_TOKEN}
</p>

</fieldset>

<fieldset>
	<legend>{L_ACP_CAT_LYNX}</legend>
<dl>
	<dt><label for="lynx_ts3uid">{L_LYNX_TS3UID}:</label><br /><span>{L_LYNX_TS3UID_EXPLAIN}</span></dt>
	<dd><input type="text" id="lynx_ts3uid" name="lynx_ts3uid" value="{LYNX_TS3UID}" /></dd>
</dl>
<p class="quick">
	<input class="button1" type="submit" name="update" value="{L_SUBMIT}" />
	<input type="hidden" name="action" value="" />
	{S_FORM_TOKEN}
</p>
</fieldset>
</form>]]></action>
			</edit>
		</open>
		<open src="includes/acp/acp_groups.php">
			<edit>
				<find><![CDATA[					$submit_ary = array(
						'colour'			=> request_var('group_colour', ''),
						'rank'				=> request_var('group_rank', 0),
						'receive_pm'		=> isset($_REQUEST['group_receive_pm']) ? 1 : 0,
						'legend'			=> isset($_REQUEST['group_legend']) ? 1 : 0,
						'message_limit'		=> request_var('group_message_limit', 0),
						'max_recipients'	=> request_var('group_max_recipients', 0),
						'founder_manage'	=> 0,
						'skip_auth'			=> request_var('group_skip_auth', 0),
					);]]></find>
				<action type="after-add"><![CDATA[					$submit_ary = array_merge($submit_ary, array(
                                                'lynx_ts3'		=>  request_var('group_lynx_ts3', 0),
                                                'lynx_ejabberd'	=>  isset($_REQUEST['group_lynx_ejabberd']) ? 1 : 0,
                                                'lynx_openfire'	=>  request_var('group_lynx_openfire', ''),
                                            ));]]></action>
			</edit>
			<edit>
				<find><![CDATA[						$test_variables = array(
							'rank'			=> 'int',
							'colour'		=> 'string',
							'avatar'		=> 'string',
							'avatar_type'	=> 'int',
							'avatar_width'	=> 'int',
							'avatar_height'	=> 'int',
							'receive_pm'	=> 'int',
							'legend'		=> 'int',
							'message_limit'	=> 'int',
							'max_recipients'=> 'int',
							'founder_manage'=> 'int',
							'skip_auth'		=> 'int',
						);]]></find>
				<action type="after-add"><![CDATA[						$test_variables = array_merge($test_variables, array(
                                                        'lynx_ts3'		=>  'int',
                                                        'lynx_ejabberd'	=>  'int',
                                                        'lynx_openfire'	=>  'string',					
                                                    ));]]></action>
			</edit>
			<edit>
				<find><![CDATA[					'GROUP_COLOUR'			=> (isset($group_row['group_colour'])) ? $group_row['group_colour'] : '',
					'GROUP_SKIP_AUTH'		=> (!empty($group_row['group_skip_auth'])) ? ' checked="checked"' : '',
]]></find>
				<action type="after-add"><![CDATA[					'GROUP_LYNX_TS3'	=> (isset($group_row['group_lynx_ts3'])) ? $group_row['group_lynx_ts3'] : 0,
					'GROUP_LYNX_EJABBERD'	=> (isset($group_row['group_lynx_ejabberd']) && $group_row['group_lynx_ejabberd']) ? ' checked="checked"' : '',
					'GROUP_LYNX_OPENFIRE'	=> (isset($group_row['group_lynx_openfire'])) ? $group_row['group_lynx_openfire'] : "",
]]></action>
			</edit>
		</open>
		<open src="includes/acp/acp_users.php">
			<edit>
				<find><![CDATA[					// Handle registration info updates
					$data = array(
						'username'			=> utf8_normalize_nfc(request_var('user', $user_row['username'], true)),
						'user_founder'		=> request_var('user_founder', ($user_row['user_type'] == USER_FOUNDER) ? 1 : 0),
						'email'				=> strtolower(request_var('user_email', $user_row['user_email'])),
						'email_confirm'		=> strtolower(request_var('email_confirm', '')),
						'new_password'		=> request_var('new_password', '', true),
						'password_confirm'	=> request_var('password_confirm', '', true),
					);]]></find>
				<action type="after-add"><![CDATA[					$data = array_merge($data, array(
						'lynx_ts3uid'	=> request_var('lynx_ts3uid', '', true),
					));]]></action>
			</edit>
			<edit>
				<find><![CDATA[					// Validation data - we do not check the password complexity setting here
					$check_ary = array(
						'new_password'		=> array(
							array('string', true, $config['min_pass_chars'], $config['max_pass_chars']),
							array('password')),
						'password_confirm'	=> array('string', true, $config['min_pass_chars'], $config['max_pass_chars']),
					);]]></find>
				<action type="after-add"><![CDATA[					$check_ary = array_merge($check_ary, array(
						'lynx_ts3uid'	=> array(
							array('string', true, 28, 28),
						),
					));]]></action>
			</edit>
			<edit>
				<find><![CDATA[						if (sizeof($sql_ary))
						{
							$sql = 'UPDATE ' . USERS_TABLE . '
								SET ' . $db->sql_build_array('UPDATE', $sql_ary) . '
								WHERE user_id = ' . $user_id;
							$db->sql_query($sql);
						}]]></find>
				<action type="after-add"><![CDATA[						// Update the users TS UID
						$updateUID = Lynx_TeamSpeak3::updateUID($user_id, $data['lynx_ts3uid'], $user_row['lynx_ts3uid']);
						
						// Add to log if changed successfully
						if($updateUID)
						{
							add_log('user', $user_id, 'LOG_LYNX_UPDATED_TS3UID', $data['lynx_ts3uid']);
						}]]></action>
			</edit>
			<edit>
				<find><![CDATA[					'USER_WARNINGS'		=> $user_row['user_warnings'],
					'USER_POSTS'		=> $user_row['user_posts'],
					'USER_HAS_POSTS'	=> $user_row['user_has_posts'],
					'USER_INACTIVE_REASON'	=> $inactive_reason,]]></find>
				<action type="after-add"><![CDATA[					'LYNX_TS3UID'	=> $user_row['lynx_ts3uid'], ]]></action>
			</edit>
		</open>
		<open src="includes/functions_user.php">
			<edit>
				<find><![CDATA[	if ($default)
	{
		group_user_attributes('default', $group_id, $user_id_ary, false, $group_name, $group_attributes);
	}

	$db->sql_transaction('commit');]]></find>
				<action type="after-add"><![CDATA[	// Now that the users are added to the groups, lets try to update their permissions on TS and/or Jabber
	// Call globals first
	global $config, $user;
	
	// Check if the array holds any users to update
	if(isset($sql_ary) && !empty($sql_ary))
	{
		// Make a connection to the TeamSpeak 3 Virtual Server to avoid having to reconnect per user
		try
		{
			// Set custom nickname for serverquery client
			$tsNickname = (Lynx_TeamSpeak3::validateMixedalphanumeric($tsNickname) != 1) ? "Cyerus" : $config['lynx_ts_nickname'];

			$tsVirtualServer = TeamSpeak3::factory("serverquery://" . $config['lynx_ts_username'] . ":" . $config['lynx_ts_password'] . "@" . $config['lynx_ts_ip'] . ":" . $config['lynx_ts_port_query'] . "/?server_port=" . $config['lynx_ts_port_server'] . "&nickname=" . $tsNickname);
			
			// TeamSpeak 3 connection has been made, time to update each user
			foreach($sql_ary as $row)
			{
				// Don't send TS UID along, as we don't know it here, and the setUserAccess function can grab it itself aswell
				Lynx_Main::setUserAccess($row['user_id'], false, $tsVirtualServer);
			}
		} 
		catch (TeamSpeak3_Exception $e) 
		{
			Lynx_Log::addToLog($user->data['user_id'], "TeamSpeak 3", $e->getCode(), $e->getMessage());
		}
	}]]></action>
			</edit>
			<edit>
				<find><![CDATA[	$sql = 'DELETE FROM ' . USER_GROUP_TABLE . "
		WHERE group_id = $group_id
			AND " . $db->sql_in_set('user_id', $user_id_ary);
	$db->sql_query($sql);

	// Clear permissions cache of relevant users
	$auth->acl_clear_prefetch($user_id_ary);]]></find>
				<action type="after-add"><![CDATA[	// Now that the users are added to the groups, lets try to update their permissions on TS and/or Jabber
	// Call globals first
	global $user;
	
	// Check if the array holds any users to update
	if(isset($user_id_ary) && !empty($user_id_ary))
	{
		// Make a connection to the TeamSpeak 3 Virtual Server to avoid having to reconnect per user
		try
		{
			// Set custom nickname for serverquery client
			$tsNickname = (Lynx_TeamSpeak3::validateMixedalphanumeric($tsNickname) != 1) ? "Cyerus" : $config['lynx_ts_nickname'];

			$tsVirtualServer = TeamSpeak3::factory("serverquery://" . $config['lynx_ts_username'] . ":" . $config['lynx_ts_password'] . "@" . $config['lynx_ts_ip'] . ":" . $config['lynx_ts_port_query'] . "/?server_port=" . $config['lynx_ts_port_server'] . "&nickname=" . $tsNickname);
			
			// TeamSpeak 3 connection has been made, time to update each user
			foreach($user_id_ary as $userId)
			{
				// Don't send TS UID along, as we don't know it here, and the setUserAccess function can grab it itself aswell
				Lynx_Main::setUserAccess($userId, false, $tsVirtualServer);
			}
		} 
		catch (TeamSpeak3_Exception $e) 
		{
			Lynx_Log::addToLog($user->data['user_id'], "TeamSpeak 3", $e->getCode(), $e->getMessage());
		}
	}]]></action>
			</edit>
		</open>
		<open src="common.php">
			<edit>
				<find><![CDATA[ foreach ($cache->obtain_hooks() as $hook)
{
	@include($phpbb_root_path . 'includes/hooks/' . $hook . '.' . $phpEx);
} ]]></find>
				<action type="after-add"><![CDATA[// Lynx MOD start

// Load TeamSpeak3 PHP Framework
require($phpbb_root_path . "/includes/lynx/TeamSpeak3/TeamSpeak3.".$phpEx);
					
// Load OpenFireUserService class
require($phpbb_root_path . "/includes/lynx/OpenFireUserService/OpenFireUserService.".$phpEx);
					
// Load Lynx classes
require($phpbb_root_path . "/includes/lynx/Lynx_Main.".$phpEx);
require($phpbb_root_path . "/includes/lynx/Lynx_Log.".$phpEx);
require($phpbb_root_path . "/includes/lynx/Lynx_TeamSpeak3.".$phpEx);
require($phpbb_root_path . "/includes/lynx/Lynx_OpenFire.".$phpEx);
require($phpbb_root_path . "/includes/lynx/Lynx_Ejabberd.".$phpEx);

// Lynx MOD end ]]></action>
			</edit>
		</open>
                
		<diy-instructions lang="en"><![CDATA[--------------------------------------------------------------------------------------------

		Browse to install/ and run the installer

		Clear your cache in the "Administration Control Panel" (ACP) > "General" > "Purge the cache"

		Refresh your Styles:
		"Administration Control Panel" (ACP) > "Styles" > "Templates" > each > "refresh"
		"Administration Control Panel" (ACP) > "Styles" > "Themes" > each > "refresh"
		"Administration Control Panel" (ACP) > "Styles" > "Imagesets" > each > "refresh"

		--------------------------------------------------------------------------------------------]]></diy-instructions>
		
	</action-group>
</mod>
